class Box
{
//l,b,h are integers representing the dimensions of the box
long long l,b,h;
// The class should have the following functions : 
// Constructors: 
// Box();
public:
       Box()
       {
           l=b=h=0;

       }
// Box(int,int,int);
       Box(long long length, long long breadth, long long height)
       {
        l = length;
        b = breadth;
        h = height;
       }
// Box(Box);
       Box(const Box &B)
       {
           l = B.l;
           b = B.b;
           h = B.h;

       }


// int getLength(); // Return box's length
       int getLength()
       {
           return l;
       }
// int getBreadth (); // Return box's breadth
       int getBreadth()
       {
           return b;
       }
// int getHeight ();  //Return box's height
       int getHeight()
       {
           return h;
       }
// long long CalculateVolume(); // Return the volume of the box
       long long CalculateVolume()
       {
           long long z;
           z = (b)*l*h;
           return (long long) z;
       }

//Overload operator < as specified
//bool operator<(Box& b)
bool operator<(const Box& B)
{
    Box box;
    if(l < B.l)
    {
        return true;
    }
    else if((b < B.b) && (l == B.l) )
    {
        return true;
    }
    else if((h < B.h) && (b == B.b))
    {
        return true;
    }
    return false;

}
};



//Overload operator << as specified
//ostream& operator<<(ostream& out, Box& B)
ostream &operator<<(ostream &out,class Box &B)
{
    out << B.getLength() <<" "<< B.getBreadth() <<" "<< B.getHeight();
    return out;
}
