#include <bits/stdc++.h>
using namespace std;
 
string ltrim(const string &);
string rtrim(const string &);

int minSum(vector<int> arr, int n)
{
    int sum = arr[0];
 
    for (int i = 1; i < n; i++) {
        if (arr[i] == arr[i - 1]) {            
 

            int j = i;
            while (j < n && arr[j] <= arr[j - 1]) {          
                arr[j] = arr[j] + 1;
                j++;
            }
        }
         sum = sum + arr[i];
     }
 
    return sum;
}
 

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));
 
    string arr_count_temp;
    getline(cin, arr_count_temp);
 
    int arr_count = stoi(ltrim(rtrim(arr_count_temp)));
 
    
 
    vector<int> arr(arr_count);
 
    for (int i = 0; i < arr_count; i++) {
        string arr_temp;
        getline(cin, arr_temp);
        int arr_item = stoi(ltrim(rtrim(arr_temp)));
 
        arr[i] = arr_item;
    }
 
    int result = minSum(arr, arr_count);
 
    cout << result << "\n";
 
    fout.close();
 
    return 0;
}
 
string ltrim(const string &str) {
    string s(str);
 
    s.erase(
        s.begin(),
        find_if(s.begin(), s.end(), not1(ptr_fun<int, int>(isspace)))
    );
 
    return s;
}
 
string rtrim(const string &str) {
    string s(str);
 
    s.erase(
        find_if(s.rbegin(), s.rend(), not1(ptr_fun<int, int>(isspace))).base(),
        s.end()
    );
 
    return s;
}

